/* CLI

- text-based interface gives you the ability to enable developer packages with your project seamlessly
- With the command-line interface, you can do complex actions quickly. 
- The command-line interface is also customizable with plug-ins and packages, which gives you the flexibility to customize your development workspace tools. With the command-line tool, you execute scripts, create directories, and interact with tools such as Git where you can build and work on source-driven development projects or CI integrations.
- A shell is a program that interprets and executes the commands entered in the command-line interface
- Command. The command (sometimes referred to as utility) comes first. This tells the system what actions you want the tool to take.
- Flag. Flags (sometimes called options) specify a value that triggers a process or tells the command what other variables to include. Most values in flags are Boolean (true or false) or tell the system you want to set a variable such as naming a project.
- Flags are identified by one or two hyphens - -- and followed by a value. Some commands may have required flags. Some flags may require arguments. For example, when creating a new Salesforce DX project, if you want to name your project, you use the -n flag and then add the name of your project as the argument -n MyProject.
- Switches are a lot like flags but don't require arguments. For Salesforce CLI commands, we've baked in a lot of flag options as switches to simplify working in the command-line tool.
- Arguments. Arguments tell the system what variable you want to set or which process you want to invoke. Arguments usually follow a flag after a space.